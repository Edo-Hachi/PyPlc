Implement electrical grid-based ladder logic system with real-time power flow visualization

## Major Features Added

### Grid-Based Device Management System
- Implemented GridDevice class for intersection-based device placement
- Added DeviceType enum (EMPTY, BUSBAR, TYPE_A, TYPE_B, COIL, TIMER, COUNTER, WIRE_H, WIRE_V)
- Created GridDeviceManager with 10x10 grid array for device positioning
- Established device placement API: place_device(), get_device(), remove_device()

### Electrical Continuity System
- Implemented LadderRung class for horizontal line electrical management
- Added BusConnection class with vertical bus expansion capability
- Created ElectricalSystem for ladder-wide electrical state management
- Developed real-time power flow calculation with left-to-right logic execution

### Power Segment Visualization
- Implemented get_power_segments() for precise wire segment management
- Added electrical wiring visualization with color-coded power states
- Real-time power flow tracing from left bus through devices to right bus
- Dynamic wire color updates (green=energized, gray=off) based on logic conditions

### Layout Optimization
- Upgraded screen resolution from 160x120 to 256x256 pixels
- Implemented Layout and Colors constant classes for maintainable code
- Created device palette system with 1-8 key selection interface
- Added grid intersection positioning with 16x16 pixel cell structure

### Device State Integration
- Synchronized GridDevice states with existing PLCDevice system
- Implemented device-specific state management (timers, counters, contacts, coils)
- Added sprite-based visual representation with state-dependent rendering
- Maintained backward compatibility with existing ladder logic execution

## Technical Implementation

### Core Classes
- `GridDevice`: Individual grid cell device with type-specific state management
- `LadderRung`: Horizontal electrical line with left-to-right power flow logic
- `ElectricalSystem`: System-wide electrical state coordinator
- `BusConnection`: Bus bar connection points (prepared for vertical bus expansion)

### Visual Enhancements
- 16x16 pixel grid overlay for precise device alignment
- Device palette with visual selection feedback
- Real-time electrical continuity visualization
- Integrated sprite management with power state synchronization

### Future-Ready Architecture
- Designed with vertical bus bar expansion in mind
- Modular electrical system supporting complex circuit topologies
- Extensible device type system for additional PLC components
- Prepared infrastructure for branch circuits and self-holding circuits

## Test Configuration
- Test circuit: X001 AND X002 â†’ Y001 positioned at grid intersections
- Device placement: (0,2)=BUSBAR, (2,2)=X001, (4,2)=X002, (8,2)=Y001
- Manual device control: Shift+1/2 for X001/X002 toggle operation
- Real-time verification of electrical continuity and power flow visualization

This implementation establishes the foundation for a comprehensive PLC ladder diagram simulator with true electrical behavior modeling and grid-based circuit construction interface.

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>